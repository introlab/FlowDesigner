#ifndef QTCONNECTDIALOG_H_
#define QTCONNECTDIALOG_H_

#include <QtCore/QVariant>
#include <QtNetwork/QUdpSocket>
#include <QtGui/QAction>
#include <QtGui/QApplication>
#include <QtGui/QButtonGroup>
#include <QtGui/QDialog>
#include <QtGui/QDialogButtonBox>
#include <QtGui/QGroupBox>
#include <QtGui/QLabel>
#include <QtGui/QLineEdit>
#include <QtGui/QMessageBox>
#include <QtGui/QStandardItemModel>
#include <QtGui/QTabWidget>
#include <QtGui/QTreeView>
#include <QtGui/QItemSelectionModel>

#include "QtFlowIpBroadcaster.h"

#include <iostream>

//First draft generated by QtDesigner

class QtConnectDialog : public QDialog
{
	Q_OBJECT;
private:
	static const int UPDATE_INTERVAL_MS = QtFlowIpBroadcaster::BROADCAST_INTERVAL_MS*2;

public:

	QtConnectDialog(QWidget* parent);
    ~QtConnectDialog();
    
    QString getHost() const;
    int getPort() const;
    
public slots:
    virtual void accept();
    virtual void reject();
    
protected:
    virtual void hideEvent(QHideEvent* event);
    virtual void showEvent(QShowEvent* event);
   
private slots:
	void processPendingDatagrams();
	void indexSelected(const QModelIndex &index);
	void updateModelTime();
 
private:
    void setupUi(QDialog *Dialog);
    void retranslateUi(QDialog *Dialog);
    bool validateForm();
    void enableSocket(bool enable);
    void setupModel();
    void updateModel(const QString &name, const QString &host, const QString &port);
    
private:
    QDialogButtonBox *buttonBox;
    QLineEdit *lineEdit_host;
    QLineEdit *lineEdit_port;
    QLabel *label;
    QLabel *label_2;
    QLabel *label_3;
    
    QTabWidget* m_tabWidget;
    
    QTreeView* m_listView;
    QStandardItemModel* m_model;
    QItemSelectionModel* m_selectionModel;
	QUdpSocket* m_udpSocket;
	
    QString m_host;
    int m_port;
};

#endif /*QTCONNECTDIALOG_H_*/
