dnl Process this file with autoconf to produce a configure script. -*-m4-*-

AC_INIT(data-flow/include/Node.h)

FLOWDESIGNER_MAJOR_VERSION=0
FLOWDESIGNER_MINOR_VERSION=9
FLOWDESIGNER_MICRO_VERSION=1
FLOWDESIGNER_VERSION=$FLOWDESIGNER_MAJOR_VERSION.$FLOWDESIGNER_MINOR_VERSION.$FLOWDESIGNER_MICRO_VERSION
FLOWDESIGNER_INTERFACE_AGE=0
FLOWDESIGNER_BINARY_AGE=0


AC_SUBST(FLOWDESIGNER_MAJOR_VERSION)
AC_SUBST(FLOWDESIGNER_MINOR_VERSION)
AC_SUBST(FLOWDESIGNER_MICRO_VERSION)
AC_SUBST(FLOWDESIGNER_INTERFACE_AGE)
AC_SUBST(FLOWDESIGNER_BINARY_AGE)
AC_SUBST(FLOWDESIGNER_VERSION)

# libtool versioning
LT_RELEASE=$FLOWDESIGNER_MAJOR_VERSION.$FLOWDESIGNER_MINOR_VERSION
LT_CURRENT=`expr $FLOWDESIGNER_MICRO_VERSION - $FLOWDESIGNER_INTERFACE_AGE`
LT_REVISION=$FLOWDESIGNER_INTERFACE_AGE
LT_AGE=`expr $FLOWDESIGNER_BINARY_AGE - $FLOWDESIGNER_INTERFACE_AGE`
AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

# For automake.
VERSION=$FLOWDESIGNER_VERSION
PACKAGE=FlowDesigner

AM_INIT_AUTOMAKE($PACKAGE, $VERSION, no-define)
AM_MAINTAINER_MODE

AC_MODULE_OPT(audio_blocks, yes)
AC_MODULE_OPT(effects, yes)
AC_MODULE_OPT(NNet, yes)
AC_MODULE_OPT(HMM, yes)
AC_MODULE_OPT(VQ, yes)
AC_MODULE_OPT(FuzzyEngine, yes)
AC_MODULE_OPT(lapackflow, no)
AC_MODULE_OPT(octave, no)
AC_MODULE_OPT(vflow, yes)
AC_MODULE_OPT(qtflow, no)

AM_CONDITIONAL(COND_OPT, true)


modules="$audio_blocks $VQ $HMM $NNet $FuzzyEngine $effects $lapackflow $octave $vflow $qtflow"

AC_SUBST(modules)
AC_CONFIG_SUBDIRS($modules)

dnl Put configuration information in config.h.
#AM_CONFIG_HEADER(config.h)

AC_CANONICAL_HOST
AC_DISABLE_STATIC

#CYGWIN LDFLAGS ADDITION
case $host_os in
  *cygwin* ) CYGWIN="yes";;
         * ) CYGWIN="no";;
esac


if test "$CYGWIN" = "yes"; then
	AC_LIBTOOL_WIN32_DLL
	CYGWIN_LDFLAGS="-no-undefined"
else
	CYGWIN_LDFLAGS=""
fi
AM_CONDITIONAL(WITH_CYGWIN, test "$CYGWIN" = "yes")
AC_SUBST(CYGWIN_LDFLAGS)
AM_PROG_LIBTOOL

dnl AC_DEFINE(VERSION, ${VERSION})
dnl AC_DEFINE_UNQUOTED(VERSION, ${VERSION})
AC_FLOWDESIGNER_CHECKS
AC_CHECK_HEADER(sstream, rm -f $srcdir/data-flow/include/sstream, cp -pf $srcdir/data-flow/include/sstream.unused $srcdir/data-flow/include/sstream)

dnl Output the makefiles and version.h.

AC_OUTPUT([Makefile \
	data-flow/Makefile \
	data-flow/src/Makefile data-flow/include/Makefile \
	data-flow/n-files/Makefile \
	tools/Makefile tools/src/Makefile examples/Makefile \
	flowdesigner-config FlowDesigner.spec \
   FlowDesigner.pc \
	])


dnl Notification message for the user to know which flags will be used for compilation
dnl should use AC_MSG_NOTICE(), but that's apparently not defined in autoconf 2.13
AC_MSG_RESULT([])
AC_MSG_RESULT([*************************************************************])
AC_MSG_RESULT([])
AC_MSG_RESULT([$PACKAGE will be built on a $build system to run])
AC_MSG_RESULT([on a $host system, with the following options:])
AC_MSG_RESULT([])

if test "$audio_blocks" = "audio_blocks"; then
	AC_MSG_RESULT([$PACKAGE will build audio_blocks toolkit])
fi

if test "$effects" = "effects"; then
	AC_MSG_RESULT([$PACKAGE will build effects toolkit])
fi

if test "$NNet" = "NNet"; then
	AC_MSG_RESULT([$PACKAGE will build NNet toolkit])
fi

if test "$HMM" = "HMM"; then
	AC_MSG_RESULT([$PACKAGE will build HMM toolkit])
fi

if test "$VQ" = "VQ"; then
	AC_MSG_RESULT([$PACKAGE will build VQ toolkit])
fi

if test "$FuzzyEngine" = "FuzzyEngine"; then
	AC_MSG_RESULT([$PACKAGE will build FuzzyEngine toolkit])
fi

if test "$lapackflow" = "lapackflow"; then
	AC_MSG_RESULT([$PACKAGE will build lapackflow toolkit])
fi

if test "$octave" = "octave"; then
	AC_MSG_RESULT([$PACKAGE will build octave toolkit])
fi
		
if test "$vflow" = "vflow"; then
	AC_MSG_RESULT([$PACKAGE will build vflow toolkit])
fi

if test "$qtflow" = "qtflow"; then
	AC_MSG_RESULT([$PACKAGE will build qtflow toolkit])
fi

AC_MSG_RESULT([Using CYGWIN FLAGS : $CYGWIN_LDFLAGS])
AC_MSG_RESULT([])
AC_MSG_RESULT([*************************************************************])
AC_MSG_RESULT([$PACKAGE will be installed in $prefix])
AC_MSG_RESULT([To see the configuration options, do:])
AC_MSG_RESULT([    ./configure --help])
AC_MSG_RESULT([])
AC_MSG_RESULT([When you're satisfied with the configuration, type 'make; make install'. ])
AC_MSG_RESULT([])


